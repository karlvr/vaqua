<?xml version="1.0" encoding="UTF-8"?>

<project
    basedir="."
    default="release"
    xmlns:resolver="antlib:org.apache.maven.resolver.ant"
    xmlns:ivy="antlib:org.apache.ivy.ant"
    name="VAqua Look and Feel">

    <tstamp>
        <format property="NOW" timezone="GMT" pattern="yyyy-MM-dd'T'HH:mm:ss'Z'"/>
    </tstamp>

    <!-- A Java 9 or later compiler is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk" failonerror="true">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="9+"/>
    </exec>

    <property name="javac" location="${jdk}/bin/javac"/>

    <!-- A Java 8 boot class path is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk8" failonerror="true">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="1.8"/>
    </exec>

    <property name="bootclasspath" location="${jdk8}/jre/lib/rt.jar" />

    <property name="RELEASE" value="0.9"/>
    <property name="fullReleaseName" value="${RELEASE} ${NOW}"/>

    <property name="base" location=".."/>
    <property name="src" location="${base}/src"/>
    <property name="src8" location="${base}/Java8Support/src"/>
    <property name="src9" location="${base}/Java9Support/src"/>
    <property name="jnisrc" location="${base}/libvaqua"/>
    <property name="libkeywindowpatchsrc" location="${base}/libkeywindowpatch"/>
    <property name="libwindowstylepatchsrc" location="${base}/libwindowstylepatch"/>
    <property name="resources" location="${base}/resources"/>
    <property name="builddir" location="out"/>
    <property name="classesdir" location="${builddir}/classes"/>
    <property name="uber-classesdir" location="${builddir}/uber-classes"/>
    <property name="headersdir" location="${builddir}/headers"/>
    <property name="jnidir" location="${builddir}/jni"/>
    <property name="distdir" location="dist"/>
    <property name="libdir" location="${base}/lib"/>

    <property name="annotationsVersion" value="20.1.0"/>
    <property name="vappearancesVersion" value="2"/>
    <property name="jnrVersion" value="9"/>
    <property name="activationVersion" value="1.2.0"/>

    <property name="SDKroot" location="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" />
    <property name="cc" location="/usr/bin/cc"/>

    <property name="debug" value="true"/>
    <property name="debugoption" value=""/>

    <target name="init">
        <echo level="info" message="${fullReleaseName}"/>
    </target>

    <target name="clean" description="Remove build directories">
        <delete includeEmptyDirs="true" failonerror="false"><fileset dir="${builddir}"/></delete>
    </target>

    <target name="saveIDs">
      <echo file="${classesdir}/org/violetlib/aqua/RELEASE.txt" message="${RELEASE}"/>
      <echo file="${classesdir}/org/violetlib/aqua/BUILD.txt" message="${NOW}"/>
    </target>

    <!--
      To use the Maven resolver, the Maven resolver ant tasks uber JAR must be installed in .ant/lib.
      See https://maven.apache.org/resolver-ant-tasks/
    -->

    <target name="resolve-maven">
        <resolver:resolve>
          <dependencies>
            <dependency coords="org.jetbrains:annotations:${annotationsVersion}"/>
            <dependency coords="org.violetlib:vappearances:${vappearancesVersion}"/>
            <dependency coords="org.violetlib:jnr:${jnrVersion}"/>
            <dependency coords="com.sun.activation:javax.activation:${activationVersion}"/>
          </dependencies>
          <path refid="cp" classpath="compile"/>
          <properties prefix="dep." scopes="compile"/>
        </resolver:resolve>
    </target>

    <!--
      To use the Ivy resolver, the Ivy uber JAR must be downloaded and installed in .ant/lib.
      See https://ant.apache.org/ivy/
    -->

    <target name="resolve-ivy">
        <ivy:cachepath pathid="cp">
            <dependency org="org.jetbrains" name="annotations" rev="${annotationsVersion}"/>
            <dependency org="org.violetlib" name="vappearances" rev="${vappearancesVersion}"/>
            <dependency org="org.violetlib" name="jnr" rev="${jnrVersion}"/>
            <dependency org="com.sun.activation" name="javax.activation" rev="${activationVersion}"/>
        </ivy:cachepath>
    </target>

    <target name="resolve" depends="resolve-maven"/>

    <target name="copyResources">
      <copy todir="${classesdir}">
        <fileset dir="${resources}">
          <include name="org/violetlib/**"/>
        </fileset>
      </copy>
    </target>

    <target name="compile8" depends="resolve">
      <mkdir dir="${classesdir}"/>
      <mkdir dir="${headersdir}"/>

      <javac source="1.8" target="1.8"
          bootclasspath="${bootclasspath}"
          classpathref="cp"
          encoding="UTF-8"
          srcdir="${src}"
          destdir="${classesdir}"
          debug="${debug}"
          optimize="true"
          includeantruntime="false"
          fork="true"
          executable="${javac}"
          >
          <compilerarg value="-h"/>
          <compilerarg path="${headersdir}"/>
          <patternset>
            <include name="org/violetlib/aqua/**/*.java"/>
          </patternset>
      </javac>

      <javac source="1.8" target="1.8"
          bootclasspath="${bootclasspath}"
          classpathref="cp"
          encoding="UTF-8"
          srcdir="${src8}"
          destdir="${classesdir}"
          debug="${debug}"
          optimize="true"
          includeantruntime="false"
          fork="true"
          executable="${javac}"
          >
          <compilerarg value="-h"/>
          <compilerarg path="${headersdir}"/>
          <patternset>
            <include name="org/violetlib/aqua/**/*.java"/>
          </patternset>
      </javac>
    </target>

    <target name="compile9" depends="resolve">
      <mkdir dir="${classesdir}"/>
      <javac
          classpathref="cp"
          encoding="UTF-8"
          srcdir="${src9}"
          destdir="${classesdir}"
          debug="${debug}"
          optimize="true"
          includeantruntime="false"
          fork="true"
          executable="${javac}"
          >
          <compilerarg value="--release"/>
          <compilerarg value="9"/>
          <patternset>
            <include name="org/violetlib/aqua/**/*.java"/>
          </patternset>
        </javac>
    </target>

    <target name="compile-VAqua-Java" depends="compile8, compile9">
    </target>

    <target name="compile-VAqua-JNI" depends="compile8">
        <mkdir dir="${jnidir}"/>

        <exec executable="${cc}" failonerror="true" >
            <arg value="-arch"/>
            <arg value="x86_64"/>

            <arg value="-isysroot"/>
            <arg value="${SDKroot}"/>
            <env key="MACOSX_DEPLOYMENT_TARGET" value="10.7"/>

            <arg value="-o"/>
            <arg value="${jnidir}/libvaqua.dylib"/>

            <arg value="-I${jdk}/include"/>
            <arg value="-I${jdk}/include/darwin"/>
            <arg value="-I${headersdir}"/>
            <arg value="-I${libdir}"/>

            <arg value="-dynamiclib"/>
            <arg value="-ObjC"/>

            <arg value="-framework"/>
            <arg value="Cocoa"/>
            <arg value="-framework"/>
            <arg value="QuickLookThumbnailing"/>
            <arg value="-framework"/>
            <arg value="Quartz"/>

            <arg value="-F/${SDKroot}/System/Library/Frameworks/JavaVM.framework/Versions/A/Frameworks"/>
            <arg value="-framework"/>
            <arg value="JavaNativeFoundation"/>

            <arg value="-U"/>
            <arg value="_VAppearances_updateAppearance"/>
            <arg value="-undefined"/>
            <arg value="dynamic_lookup"/>

            <arg value="${debugoption}"/>

            <arg value="${jnisrc}/AquaNativeSupport.m"/>
            <arg value="${jnisrc}/AquaSidebarBackground.m"/>
            <arg value="${jnisrc}/AquaWrappedAWTView.m"/>
            <arg value="${jnisrc}/AquaVisualEffectView.m"/>
            <arg value="${jnisrc}/JavaWindowAccess.m"/>
        </exec>

    </target>

    <target name="compile-KeyWindowPatch" depends="compile8">
        <mkdir dir="${jnidir}"/>

        <exec executable="${cc}" failonerror="true" >
            <arg value="-arch"/>
            <arg value="x86_64"/>

            <arg value="-isysroot"/>
            <arg value="${SDKroot}"/>
            <env key="MACOSX_DEPLOYMENT_TARGET" value="10.7"/>

            <arg value="-o"/>
            <arg value="${jnidir}/libkeywindowpatch.dylib"/>

            <arg value="-I${jdk}/include"/>
            <arg value="-I${jdk}/include/darwin"/>
            <arg value="-I${headersdir}"/>

            <arg value="-dynamiclib"/>
            <arg value="-ObjC"/>

            <arg value="-framework"/>
            <arg value="Cocoa"/>

            <arg value="-F/${SDKroot}/System/Library/Frameworks/JavaVM.framework/Versions/A/Frameworks"/>
            <arg value="-framework"/>
            <arg value="JavaNativeFoundation"/>

            <arg value="-undefined"/>
            <arg value="dynamic_lookup"/>

            <arg value="${libkeywindowpatchsrc}/KeyWindowPatch.m"/>
            <arg value="${libkeywindowpatchsrc}/AquaWrappedWindowDelegate.m"/>
            <arg value="${libkeywindowpatchsrc}/CMenuItemCategory.m"/>
            <arg value="${libkeywindowpatchsrc}/CMenuBarCategory.m"/>
        </exec>

    </target>

    <target name="compile-WindowStylePatch" depends="compile8">
        <mkdir dir="${jnidir}"/>

        <exec executable="${cc}" failonerror="true" >
            <arg value="-arch"/>
            <arg value="x86_64"/>

            <arg value="-isysroot"/>
            <arg value="${SDKroot}"/>
            <env key="MACOSX_DEPLOYMENT_TARGET" value="10.7"/>

            <arg value="-o"/>
            <arg value="${jnidir}/libwindowstylepatch.dylib"/>

            <arg value="-I${headersdir}"/>

            <arg value="-dynamiclib"/>
            <arg value="-ObjC"/>

            <arg value="-framework"/>
            <arg value="Cocoa"/>

            <arg value="-undefined"/>
            <arg value="dynamic_lookup"/>

            <arg value="${libwindowstylepatchsrc}/WindowStylePatch.m"/>
        </exec>

    </target>

    <target name="createUberJAR" depends="resolve, VAqua">
        <mkdir dir="${uber-classesdir}"/>
        <delete includeemptydirs="true">
            <fileset dir="${uber-classesdir}" includes="**/*"/>
        </delete>
        
        <copy todir="${uber-classesdir}">
            <fileset dir="${classesdir}"/>
        </copy>

        <unjar overwrite="false" dest="${uber-classesdir}" src="${dep.org.violetlib:vappearances:jar}"/>
        <unjar overwrite="false" dest="${uber-classesdir}" src="${dep.org.violetlib:jnr:jar}"/>
        <unjar overwrite="false" dest="${uber-classesdir}" src="${dep.com.sun.activation:javax.activation:jar}"/>
    </target>

    <target name="uber-VAqua" depends="createUberJAR">
        <echo level="info" message="Building VAqua ${fullReleaseName} uber-JAR"/>
        <mkdir dir="${distdir}"/>
        <jar jarfile="${distdir}/VAqua.jar" basedir="${uber-classesdir}">
            <fileset dir="${jnidir}/"/>
        </jar>
    </target>


    <target name="VAqua" depends="compile-VAqua-JNI,compile-KeyWindowPatch,compile-WindowStylePatch,compile-VAqua-Java,copyResources,saveIDs">
        <echo level="info" message="Building VAqua ${fullReleaseName}"/>
        <mkdir dir="${distdir}"/>
        <jar jarfile="${distdir}/VAquaOnly.jar" basedir="${classesdir}">
            <fileset dir="${jnidir}/"/>
        </jar>
    </target>

    <target name="release" depends="clean,uber-VAqua"/>

</project>
